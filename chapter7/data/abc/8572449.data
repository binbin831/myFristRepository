{'TMP': 'C:\\Users\\CHENBI~1\\AppData\\Local\\Temp', 'PYTHONIOENCODING': 'UTF-8', 'COMPUTERNAME': 'GYYZITDUATNB003', '_OLD_VIRTUAL_PATH': 'C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\app\\icbcadm\\product\\11.2.0\\client_1\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Python\\Python38\\Scripts\\;C:\\Program Files\\Python\\Python38\\;.;C:\\Program Files\\Java\\jdk1.8.0_201\\bin;C:\\Program Files\\Java\\jdk1.8.0_201\\jre\\bin;C:\\Program Files\\JetBrains\\PyCharm 2020.1.1\\bin;C:\\Users\\chenbintest\\AppData\\Local\\GitHubDesktop\\bin', 'USERDOMAIN': 'GYYZITDUATNB003', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files\\Intel\\Wired Networking\\', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 58 Stepping 9, GenuineIntel', 'PYCHARM_DISPLAY_PORT': '63342', 'PROCESSOR_REVISION': '3a09', 'OSAGENT_ADDR_FILE': 'C:\\iTrade\\client\\bin', 'PATH': 'C:\\PycharmProjects\\untitled2\\untitled2\\Scripts;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\app\\icbcadm\\product\\11.2.0\\client_1\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\Python\\Python38\\Scripts\\;C:\\Program Files\\Python\\Python38\\;.;C:\\Program Files\\Java\\jdk1.8.0_201\\bin;C:\\Program Files\\Java\\jdk1.8.0_201\\jre\\bin;C:\\Program Files\\JetBrains\\PyCharm 2020.1.1\\bin;C:\\Users\\chenbintest\\AppData\\Local\\GitHubDesktop\\bin', 'PYTHONUNBUFFERED': '1', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'VIRTUAL_ENV': 'C:\\PycharmProjects\\untitled2\\untitled2', 'TEMP': 'C:\\Users\\CHENBI~1\\AppData\\Local\\Temp', 'CLASS_PATH': '.;C:\\Program Files\\Java\\jdk1.8.0_201\\lib\\dt.jar;C:\\Program Files\\Java\\jdk1.8.0_201\\lib\\tools.jar', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'SYSTEMROOT': 'C:\\Windows', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'USERPROFILE': 'C:\\Users\\chenbintest', 'LOCALAPPDATA': 'C:\\Users\\chenbintest\\AppData\\Local', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEPATH': '\\Users\\chenbintest', 'USERDOMAIN_ROAMINGPROFILE': 'GYYZITDUATNB003', 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_201', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'chenbintest', 'LOGONSERVER': '\\\\GYYZITDUATNB003', 'PROMPT': '(untitled2) $P$G', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'PYTHONPATH': 'C:\\Users\\chenbintest\\PycharmProjects\\untitled2;C:\\Program Files\\JetBrains\\PyCharm 2020.1.1\\plugins\\python\\helpers\\pycharm_matplotlib_backend;C:\\Program Files\\JetBrains\\PyCharm 2020.1.1\\plugins\\python\\helpers\\pycharm_display', 'ONEDRIVE': 'C:\\Users\\chenbintest\\OneDrive', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'IDEA_INITIAL_DIRECTORY': 'C:\\Users\\chenbintest\\Desktop', 'PYCHARM': 'C:\\Program Files\\JetBrains\\PyCharm 2020.1.1\\bin;', 'ASL.LOG': 'Destination=file', 'WINDIR': 'C:\\Windows', 'OSAGENT_PORT': '15050', 'HOMEDRIVE': 'C:', 'SYSTEMDRIVE': 'C:', 'PYCHARM_HOSTED': '1', 'NUMBER_OF_PROCESSORS': '4', '_OLD_VIRTUAL_PROMPT': '$P$G', 'APPDATA': 'C:\\Users\\chenbintest\\AppData\\Roaming', 'PROCESSOR_LEVEL': '6', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'PROGRAMFILES': 'C:\\Program Files'}